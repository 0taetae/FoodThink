version: '3.8'

services:
  backend:
    build:
      context: ./BE
      dockerfile: Dockerfile
    container_name: my-backend-container
    ports:
      - "8085:8080"
    environment:
      - DB_URL=${DB_URL}
      - DB_PASSWORD=${DB_PASSWORD}
      - SPRING_JWT_SECRET=${SPRING_JWT_SECRET}
      - AWS_CREDENTIALS_ACCESS_KEY=${AWS_CREDENTIALS_ACCESS_KEY}
      - AWS_CREDENTIALS_SECRET_KEY=${AWS_CREDENTIALS_SECRET_KEY}
      - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
      - KAKAO_CLIENT_SECRET=${KAKAO_CLIENT_SECRET}
      - KAKAO_REDIRECT_URL=${KAKAO_REDIRECT_URL}
      - GPT_API_KEY=${GPT_API_KEY}
      - API_SERVICE_KEY=${API_SERVICE_KEY}
      - S3_BUCKET=${S3_BUCKET}

  frontend:
    build:
      context: ./FE/ffood_thing
      dockerfile: Dockerfile
    container_name: my-frontend-container
    ports:
      - "8081:80"
    volumes:
      - ./app:/app # 필요한 경우 추가적인 볼륨 마운트

  nginx:
    build:
      context: ./nginx  # nginx 디렉토리에서 빌드
      dockerfile: Dockerfile  # 기본적으로 해당 디렉토리 내의 Dockerfile 사용
    container_name: my-nginx-container
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./letsencrypt:/etc/letsencrypt:ro  # SSL 인증서
      - ./dist:/app/dist  # 프론트엔드 빌드 파일
#      - ./nginx.conf:/etc/nginx/nginx.conf  # nginx 설정 파일
    #해당 경로 확인됨
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend


